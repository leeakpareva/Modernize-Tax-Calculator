name: CD Pipeline

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  # Build and Deploy Job
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: []
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    # Build Frontend
    - name: Install frontend dependencies
      run: |
        cd giftlink-frontend
        npm ci

    - name: Build frontend
      run: |
        cd giftlink-frontend
        npm run build

    # Build Backend
    - name: Install backend dependencies
      run: |
        cd giftlink-backend
        npm ci

    - name: Build backend
      run: |
        cd giftlink-backend
        npm run build

    # Docker Build and Push
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./giftlink-frontend
        file: ./giftlink-frontend/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/giftlink-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/giftlink-frontend:${{ github.sha }}

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./giftlink-backend
        file: ./giftlink-backend/Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/giftlink-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/giftlink-backend:${{ github.sha }}

    # Deploy to staging/production
    - name: Deploy to staging
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to staging environment..."
        # Add your deployment commands here
        # Example: kubectl apply -f k8s/staging/
        # Example: docker-compose -f docker-compose.staging.yml up -d

    - name: Deploy to production
      if: github.event_name == 'release'
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        # Example: kubectl apply -f k8s/production/
        # Example: docker-compose -f docker-compose.production.yml up -d

    # Notify deployment status
    - name: Notify deployment success
      if: success()
      run: |
        echo "Deployment successful!"
        # Add notification logic (Slack, Discord, email, etc.)

    - name: Notify deployment failure
      if: failure()
      run: |
        echo "Deployment failed!"
        # Add failure notification logic